name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_URL: https://mcp.asksabrina.com

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Checkout Repository
      uses: actions/checkout@v4

    - name: üöÄ Deploy Application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /opt/asksabrina-ai-mcp
          ./scripts/deploy.sh

    - name: ‚è≥ Wait for Application Startup
      run: sleep 50

    - name: üè• Health Check
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" -k https://${{ secrets.EC2_HOST }}/health)
        if [ $response -eq 200 ]; then
          echo "‚úÖ Health check passed (HTTP $response)"
        else
          echo "‚ùå Health check failed (HTTP $response)"
          exit 1
        fi

    - name: üìä Deployment Summary
      if: always()
      run: |
        echo "### Deployment Summary üöÄ" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Author:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Application URL:** ${{ env.APP_URL }}" >> $GITHUB_STEP_SUMMARY

    # 1) Capture a Unix timestamp for Slack's `ts`
    - name: Set timestamp
      if: always()
      run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

    # 2) Send colorful attachment to Slack
    - name: üì¢ Slack Notification
      if: always()
      uses: slackapi/slack-github-action@v1.25.0
      with:
        payload: |
          {
            "text": ${{ toJSON(format('{0} Deployment {1} - {2}', (job.status == 'success' && '‚úÖ' || job.status == 'cancelled' && 'üü°' || '‚ùå'), job.status, github.event.head_commit.message)) }},
            "attachments": [
              {
                "color": ${{ toJSON(job.status == 'success' && '#36a64f' || job.status == 'cancelled' && '#daa038' || '#e01e5a') }},
                "pretext": ${{ toJSON(format('{0} {1}', (job.status == 'success' && '‚úÖ' || job.status == 'cancelled' && 'üü°' || '‚ùå'), (job.status == 'success' && 'Deployment Successful' || job.status == 'cancelled' && 'Deployment Cancelled' || 'Deployment Failed'))) }},
                "title": ${{ toJSON(format('Build #{0} ‚Ä¢ {1}', github.run_number, github.workflow)) }},
                "title_link": ${{ toJSON(format('{0}/{1}/actions/runs/{2}', github.server_url, github.repository, github.run_id)) }},
                "text": ${{ toJSON(format('*Commit:* {0}\n*Author:* {1}\n*Branch:* {2}', github.event.head_commit.message, github.actor, github.ref_name)) }},
                "fields": [
                  { "title": "Repository", "value": ${{ toJSON(github.repository) }}, "short": true },
                  { "title": "SHA", "value": ${{ toJSON(github.sha) }}, "short": true },
                  { "title": "Environment", "value": ${{ toJSON(env.APP_URL) }}, "short": true },
                  { "title": "Run URL", "value": ${{ toJSON(format('{0}/{1}/actions/runs/{2}', github.server_url, github.repository, github.run_id)) }}, "short": true }
                ],
                "footer": ${{ toJSON(format('GitHub Actions ‚Äî {0}', env.APP_URL)) }},
                "footer_icon": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
                "ts": ${{ env.TIMESTAMP }},
                "mrkdwn_in": ["pretext", "text", "fields"]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        APP_URL: ${{ env.APP_URL }} # keep if you're already setting this elsewhere

